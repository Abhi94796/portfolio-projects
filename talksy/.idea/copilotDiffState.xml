<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/self/chatapplication/rest/ChatHistoryController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/self/chatapplication/rest/ChatHistoryController.java" />
              <option name="originalContent" value="package com.self.chatapplication.rest;&#10;&#10;import com.self.chatapplication.repo.ChatRedisRepository;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.web.bind.annotation.GetMapping;&#10;import org.springframework.web.bind.annotation.RequestParam;&#10;import org.springframework.web.bind.annotation.RestController;&#10;import java.util.List;&#10;&#10;@RestController&#10;public class ChatHistoryController {&#10;    @Autowired&#10;    private ChatRedisRepository redisRepository;&#10;&#10;    @GetMapping(&quot;/history&quot;)&#10;    public List&lt;String&gt; getChatHistory(@RequestParam(defaultValue = &quot;global&quot;) String chatId) {&#10;        return redisRepository.getMessages(chatId);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.self.chatapplication.rest;&#10;&#10;import com.self.chatapplication.repo.ChatRedisRepository;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.web.bind.annotation.GetMapping;&#10;import org.springframework.web.bind.annotation.RequestParam;&#10;import org.springframework.web.bind.annotation.RestController;&#10;import java.util.List;&#10;&#10;@RestController&#10;public class ChatHistoryController {&#10;    @Autowired&#10;    private ChatRedisRepository redisRepository;&#10;&#10;    @GetMapping(&quot;/history&quot;)&#10;    public List&lt;String&gt; getChatHistory(@RequestParam(defaultValue = &quot;global&quot;) String chatId) {&#10;        return redisRepository.getMessages(chatId);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/self/urlshortner/WebSocketConfig.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/self/urlshortner/WebSocketConfig.java" />
              <option name="updatedContent" value="package com.self.urlshortner;&#10;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.web.socket.config.annotation.EnableWebSocket;&#10;import org.springframework.web.socket.config.annotation.WebSocketConfigurer;&#10;import org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry;&#10;&#10;@Configuration&#10;@EnableWebSocket&#10;public class WebSocketConfig implements WebSocketConfigurer {&#10;    @Override&#10;    public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {&#10;        registry.addHandler(new ChatWebSocketHandler(), &quot;/chat&quot;).setAllowedOrigins(&quot;*&quot;);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>